// prime no =  The number which are divided by itself and 1
// but 1 is not prime no. nor composite no.

// Brute force
//Time Complexity: O(N) where N is the input number as we iterate from 1 to N performing constant-time operation for each iteration.
//Space Complexity : O(1) as the space used by the algorithm does not increase with the size of the input.




import java.util.ArrayList;
public class Main
{
	public static void main(String[] args) {
   
     int n = 7;
     int count = 0;

     for(int i= 1; i<=n; i++){
         
     if(n%i == 0){
         
         count ++;
     }
   
    }
    
    if(count == 2){  
        System.out.println("num is prime");
     }
     else{
         
        System.out.println("num is not prime");

     }

	}
}
-----------------------------------------------------
// optimal 
//O(sqrt(N)) (time)
//O(1)
public class Main
{
	public static void main(String[] args) {

int n =6;
int cnt =0;

for( int i = 1; i<= Math.sqrt(n);i++){
    
    
    if(n%i==0){
        
        cnt++;
        
    if(n/i != i){
        
        cnt++;
    }
        
    }
}

if(cnt == 2){
    
    System.out.println("No is prime");
}

else{
    
   System.out.println("No is not prime");

}

	}
}














